--- drivers/gpu/drm/bridge/parade-ps8622.c
+++ drivers/gpu/drm/bridge/parade-ps8622.c
@@ -28,6 +28,7 @@
 #include <linux/regulator/consumer.h>
 
 #include <drm/drm_panel.h>
+#include <drm/drm_of.h>
 
 #include "drmP.h"
 #include "drm_crtc.h"
@@ -587,7 +616,6 @@ static int ps8622_probe(struct i2c_client *client,
 					const struct i2c_device_id *id)
 {
 	struct device *dev = &client->dev;
-	struct device_node *endpoint, *panel_node;
 	struct ps8622_bridge *ps8622;
 	int ret;
 
@@ -595,19 +623,16 @@ static int ps8622_probe(struct i2c_client *client,
 	if (!ps8622)
 		return -ENOMEM;
 
-	endpoint = of_graph_get_next_endpoint(dev->of_node, NULL);
-	if (endpoint) {
-		panel_node = of_graph_get_remote_port_parent(endpoint);
-		if (panel_node) {
-			ps8622->panel = of_drm_find_panel(panel_node);
-			of_node_put(panel_node);
-			if (!ps8622->panel)
-				return -EPROBE_DEFER;
-		}
-	}
+	ret = drm_of_find_panel_or_bridge(dev->of_node, 1, -1,
+					  &ps8622->panel, NULL);
+	if (ret)
+		return ret;
 
 	ps8622->client = client;
 
+	ps8622->dual_channel = of_property_read_bool(dev->of_node,
+						     "dual-channel");
+
 	ps8622->v12 = devm_regulator_get(dev, "vdd12");
 	if (IS_ERR(ps8622->v12)) {
 		dev_info(dev, "no 1.2v regulator found for PS8622\n");
